services:
    fervo_deferred_event.queue.sidekiq:
        class: Fervo\DeferredEventBundle\Event\Queue\SidekiqMessageQueue
        public: false
        arguments:
            - ~

    fervo_deferred_event.queue.immediate:
        class: Fervo\DeferredEventBundle\Event\Queue\ImmediateMessageQueue
        public: false
        arguments:
            - "@fervo_deferred_event.dispatcher"
            - "@fervo_deferred_event.serializer"
            - "%fervo_deferred_event.serializer_format%"

    fervo_deferred_event.queue.amqp:
        class: Fervo\DeferredEventBundle\Event\Queue\AmqpMessageQueue
        public: false
        arguments:
            - ~

    fervo_deferred_event.dispatcher:
        alias: fervo_deferred_event.dispatcher.real

    fervo_deferred_event.dispatcher.real:
        class: Symfony\Component\EventDispatcher\EventDispatcher

    fervo_deferred_event.dispatcher.debug:
        class: Symfony\Component\EventDispatcher\Debug\TraceableEventDispatcher
        arguments:
            - "@fervo_deferred_event.dispatcher.real"
            - "@fervo_deferred_event.dispatcher.debug.stopwatch"
            - "@logger"
        tags:
            - { name: monolog.logger, channel: deferred_event }

    fervo_deferred_event.dispatcher.debug.stopwatch:
        class: Symfony\Component\Stopwatch\Stopwatch

    fervo_deferred_event.listener:
        class: Fervo\DeferredEventBundle\Listener\DeferEventListener
        arguments:
            - "@fervo_deferred_event.queue"
            - "@fervo_deferred_event.service.message_service"
        tags:
            - { name: kernel.event_listener, event: fervo.defer, method: onDeferEvent }

    fervo_deferred_event.serializer.base64:
        class: Fervo\DeferredEventBundle\Serializer\Base64NativeSerializer

    fervo_deferred_event.dependency_injection.message_header_configurator:
        class: Fervo\DeferredEventBundle\DependencyInjection\Configurator\MessageHeaderConfigurator
        arguments:
            - "@kernel"
            - "%kernel.root_dir%"

    fervo_deferred_event.service.message_service:
        class: Fervo\DeferredEventBundle\Service\MessageService
        configurator: ["@fervo_deferred_event.dependency_injection.message_header_configurator", configure]
        arguments:
            - ~
            - "@fervo_deferred_event.serializer"
            - "%fervo_deferred_event.serializer_format%"
